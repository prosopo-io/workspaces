{
  "name": "@prosopo/workspace",
  "version": "0.0.0",
  "stableVersion": "0.0.0",
  "author": "Prosopo",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/prosopo/workspaces.git"
  },
  "scripts": {
    "cmd": "e() { $@ ;}; f() { cmd=\"$1\"; shift; for arg in $@; do str=$(printf \"$cmd\" \"$arg\"); echo exec: $str; echo; e $str || exit 1; done ;}; f",
    "build": "npm run --silent cmd \"npm run --silent -w @prosopo/%s build\"",
    "b": "npm run --silent build",
    "build+deps": "f() { npm run build $(npm run --silent deps $@) ;}; f",
    "bd": "npm run --silent build+deps",
    "clean": "npm run --silent cmd \"npm run --silent -w @prosopo/%s clean\"",
    "c": "npm run --silent clean",
    "clean+deps": "f() { npm run clean $(npm run --silent deps $@) ;}; f",
    "cd": "npm run --silent clean+deps",
    "rebuild": "f() { npm run --silent cmd \"npm run clean %s\" $@ ; npm run cmd \"npm run build %s\" $@ ;}; f",
    "r": "npm run --silent rebuild",
    "rebuild+deps": "f() { npm run rebuild $(npm run --silent deps $@) ;}; f",
    "rd": "npm run --silent rebuild+deps",
    "rebuild:npm": "npm run clean:npm && npm i",
    "deps": "f() { for arg in $@; do deps=$(npm run --silent deps:$arg); (f $deps); echo -n \" $arg\"; done ;}; g() { pkgs=$(f $@); pkgs=$(echo $pkgs | tr ' ' '\n' | awk '!a[$0]++' | tr '\n' ' '); echo $pkgs ;}; g",
    "deps:contract": "echo common datasets",
    "deps:datasets": "echo common",
    "deps:api": "echo datasets",
    "deps:provider": "echo common datasets contract",
    "deps:procaptcha": "echo datasets contract api",
    "deps:procaptcha-react": "echo procaptcha",
    "deps:client-example": "echo procaptcha-react",
    "deps:client-example-server": "echo contract api",
    "deps:demo-nft-marketplace": "echo procaptcha-react",
    "clean:npm": "find . -name \"node_modules\" -type d -prune -exec rm -rf '{}' + && find . -name \"package-lock.json\" -type f -delete ",
    "clean:ts": "find . -name \"*.tsbuildinfo\" -type f -delete && find . -name \"dist\" -type d -prune -exec rm -rf '{}' + ",
    "clean:all": "npm run clean:npm && npm run clean:ts",
    "mon:provider": "npx nodemon $(npm run --silent deps provider | xargs printf ' -w packages/%s') 'npm start -w @prosopo/provider'",
    "mon:client-example": "npm start -w @prosopo/client-example",
    "watch:client-example": "npm run watch:ts & mon:client-example & wait",
    "watch:provider": "npm run watch:ts & npm run mon:provider & wait",
    "watch:ts": "tsc --watch",
    "fetch": "git submodule foreach --recursive git fetch",
    "pull": "git submodule foreach --recursive 'git pull || :'",
    "push": "git submodule foreach --recursive 'git push -u origin HEAD || :'",
    "status": "git submodule foreach --recursive git status",
    "commit": "git submodule foreach --recursive 'git commit -a -m \"$1\" || :'",
    "branch": "f() { git submodule foreach --recursive \"git switch -C $1 && git switch -C $1 origin/$1 || :\" ;}; f",
    "checkout": "npm run branch",
    "merge": "git submodule foreach --recursive 'git merge --autostash || :'",
    "merge:continue": "git submodule foreach --recursive 'git merge --continue || :'",
    "merge:abort": "git submodule foreach --recursive 'git merge --abort || :'",
    "reset": "git submodule foreach --recursive git reset --hard",
    "delete": "f() { git submodule foreach --recursive \"git branch -d $1 || :\" ;}; f",
    "delete:force": "f() { git submodule foreach --recursive \"git branch -D $1 || :\" ;}; f",
    "delete:remote": "f() { git submodule foreach --recursive \"git push origin --delete $1 || :\" ;}; f",
    "purge:local": "git submodule foreach --recursive \"git branch | grep -v develop | grep -v master | grep -v main | xargs git branch -D || :\"",
    "pr": "git submodule foreach --recursive 'gh pr create --title \"$1\" --reviewer \"$2\" || :'",
    "stash": "git submodule foreach --recursive git stash push",
    "stash:named": "git submodule foreach --recursive git stash push -m",
    "unstash": "git submodule foreach --recursive git stash pop",
    "stash:pop": "npm run unstash",
    "stash:drop": "git submodule foreach --recursive git stash drop",
    "stash:clear": "git submodule foreach --recursive git stash clear",
    "version": "npm --no-git-tag-version --allow-same-version --workspaces --workspaces-update version",
    "ls:ws": "npm run --workspaces env | grep npm_package_name | cut -d '=' -f 2",
    "setup": "npm -w @prosopo/provider run setup",
    "start": "npm -w @prosopo/provider run start",
    "server": "npm -w @prosopo/client-example-server run start",
    "demo": "npm -w @prosopo/client-example run start",
    "provider": "npm -w @prosopo/provider run cli",
    "populate-data": "npm -w @prosopo/provider run populate-data",
    "test": "npm run remove-test-container && docker compose --file docker-compose.test.yml up -d substrate-test-node && npm -w @prosopo/provider run test",
    "lint": "npm run lint --workspaces --if-present",
    "lint:fix": "npm run lint:fix --workspaces --if-present"
  },
  "private": true,
  "engines": {
    "node": ">=14.0.0"
  },
  "workspaces": [
    "packages/*",
    "demos/*"
  ],
  "devDependencies": {
    "depcheck": "^1.4.3",
    "nodemon": "^2.0.20",
    "npm-check-updates": "^15.3.4",
    "tslib": "^2.4.0",
    "typescript": "^4.7.4"
  },
  "description": "Integrates protocol and provider for development purposes",
  "bugs": {
    "url": "https://github.com/prosopo/workspaces/issues"
  },
  "homepage": "https://github.com/prosopo/workspaces#readme",
  "keywords": [],
  "license": "ISC"
}
